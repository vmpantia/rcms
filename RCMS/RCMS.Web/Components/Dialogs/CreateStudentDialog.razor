@using RCMS.Shared.Models.Students
@using RCMS.Web.Components.Forms
@using RCMS.Web.Extensions
@using RCMS.Web.Interfaces.Helpers
@using RCMS.Web.Interfaces.Services

<MudDialog>
    <DialogContent>
        <StudentForm TStudent="CreateStudentDto"
                     Student="@_student" 
                     ErrorMessage="@_errorMessage"
                     IsSubmitting="_isCreating"
                     OnSubmitButtonClick="HandleCreateStudentAsync"/>
    </DialogContent>
</MudDialog>

@code {
    [Inject] public IStudentService StudentService { get; set; }
    [Inject] public IDialogHelper DialogHelper { get; set; }
    [Inject] public ISnackbar Snackbar { get; set; }

    [CascadingParameter] public IMudDialogInstance MudDialog { get; set; }
    
    private CreateStudentDto _student = new();
    private bool _isCreating;
    private string _errorMessage = string.Empty;

    private async Task HandleCreateStudentAsync()
    {
        try
        {
            var isConfirmed = await DialogHelper.ShowMessageDialogAsync("Confirm Creation", "Are you sure you want to create this student?");
            if (isConfirmed)
            {
                StateHasChanged();
                _errorMessage = string.Empty;
                _isCreating = true;
            
                await StudentService.CreateStudentAsync(_student);
            
                // Alert user for success request and close dialog
                Snackbar.Add("Student created successfully.", Severity.Success);
                MudDialog.Close(DialogResult.Ok(true));
            }
        }
        catch (Exception ex)
        {
            _errorMessage = ex.Message;
        }
        finally
        {
            _isCreating = false;
        }
    }
}