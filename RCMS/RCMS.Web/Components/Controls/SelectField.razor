@using System.Linq.Expressions
@using RCMS.Web.Models

@typeparam T

<MudSelect Label="@Label" Placeholder="@Placeholder"
           Value="@Value" ValueChanged="@ValueChanged" 
           SelectedValues="@SelectedValues" SelectedValuesChanged="@SelectedValuesChanged"
           MultiSelection="IsMultipleSelection"
           For="@For" Disabled="@IsDisabled" Variant="Variant.Outlined" Margin="Margin.Dense" 
           HelperText="@HelperText" Clearable="true">
    @foreach (var option in Options)
    {
        <MudSelectItem Value="option.Value">@option.Display</MudSelectItem>
    }
</MudSelect>

@code {

    [Parameter] public string Label { get; set; }
    [Parameter] public string Placeholder { get; set; }
    [Parameter] public T Value { get; set; }
    [Parameter] public EventCallback<T> ValueChanged { get; set; }
    [Parameter] public IEnumerable<T?>? SelectedValues { get; set; }
    [Parameter] public EventCallback<IEnumerable<T?>?> SelectedValuesChanged { get; set; }
    [Parameter] public Expression<Func<T>> For { get; set; }
    [Parameter] public bool IsDisabled { get; set; }
    [Parameter] public bool IsMultipleSelection { get; set; }
    [Parameter] public string HelperText { get; set; }
    [Parameter] public IEnumerable<SelectFieldOption> Options { get; set; }
    
}