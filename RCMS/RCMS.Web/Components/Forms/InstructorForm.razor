@using RCMS.Shared.Enumerations
@using RCMS.Shared.Models.Instructors
@using RCMS.Web.Components.Validations
@using RCMS.Web.Components.Controls

@typeparam TInstructor where TInstructor : SaveInstructorDto

<EditForm Model="Instructor" OnValidSubmit="OnSubmitButtonClick">
    <FluentValidationValidator T="TInstructor" />
    <MudGrid Class="mb-5">
        @if (IsLoading)
        {
            <MudItem xs="12">
                <MudSkeleton Height="30px" />
            </MudItem>
            <MudItem xs="4">
                <MudSkeleton Height="30px" />
            </MudItem>
            <MudItem xs="4">
                <MudSkeleton Height="30px" />
            </MudItem>
            <MudItem xs="4">
                <MudSkeleton Height="30px" />
            </MudItem>
            <MudItem xs="4">
                <MudSkeleton Height="30px" />
            </MudItem>
            <MudItem xs="4">
                <MudSkeleton Height="30px" />
            </MudItem>
            <MudItem xs="12">
                <MudSkeleton Height="30px" />
            </MudItem>
            <MudItem xs="6">
                <MudSkeleton Height="30px" />
            </MudItem>
            <MudItem xs="6">
                <MudSkeleton Height="30px" />
            </MudItem>
            <MudItem Class="mt-2" xs="12">
                <MudSkeleton Height="30px" />
            </MudItem>
        }
        else
        {
            @if (HasError)
            {
                <MudItem xs="12">
                    <MudAlert Severity="Severity.Error">
                        @((MarkupString)ErrorMessage)
                    </MudAlert>
                </MudItem>
            }
            <MudItem xs="12">
                <MudText Typo="Typo.button">Personal Information</MudText>
            </MudItem>
            <MudItem xs="4">
                <TextField Label="First Name"
                           @bind-Value="Instructor.FirstName"
                           For="@(() => Instructor.FirstName)"
                           IsDisabled="IsFormDisabled"/>
            </MudItem>
            <MudItem xs="4">
                <TextField Label="Middle Name"
                           @bind-Value="Instructor.MiddleName"
                           For="@(() => Instructor.MiddleName)"
                           IsDisabled="IsFormDisabled"/>
            </MudItem>
            <MudItem xs="4">
                <TextField Label="Last Name"
                           @bind-Value="Instructor.LastName"
                           For="@(() => Instructor.LastName)"
                           IsDisabled="IsFormDisabled"/>
            </MudItem>
            <MudItem xs="4">
                <SelectField Label="Gender"
                             @bind-Value="Instructor.Gender"
                             For="@(() => Instructor.Gender)"
                             IsDisabled="IsFormDisabled"
                             Options="@(Enum.GetValues<GenderType>().Select(gt => gt.ToString()))"/>
            </MudItem>
            <MudItem xs="4">
                <DateTimeField Label="Birthdate"
                               @bind-Date="Instructor.BirthDate"
                               For="@(() => Instructor.BirthDate)"
                               IsDisabled="IsFormDisabled"/>
            </MudItem>
            <MudItem xs="12">
                <MudText Typo="Typo.button">Contact Information</MudText>
            </MudItem>
            <MudItem xs="6">
                <TextField Label="Phone Number"
                           @bind-Value="Instructor.PhoneNumber"
                           For="@(() => Instructor.PhoneNumber)"
                           IsDisabled="IsFormDisabled"/>
            </MudItem>
            <MudItem xs="6">
                <TextField Label="Email Address"
                           @bind-Value="Instructor.EmailAddress"
                           For="@(() => Instructor.EmailAddress)"
                           IsDisabled="IsFormDisabled"/>
            </MudItem>
            <MudItem Class="mt-2" xs="12">
                <Button Type="ButtonType.Submit" 
                        IsDisabled="IsFormDisabled" 
                        IsLoading="IsSubmitting" 
                        Text="Submit"
                        LoadingText="Submitting"></Button>
            </MudItem>
        }
    </MudGrid>
</EditForm>

@code {
    [Parameter] public TInstructor Instructor { get; set; }
    [Parameter] public string ErrorMessage { get; set; }
    [Parameter] public bool IsLoading { get; set; }
    [Parameter] public bool IsSubmitting { get; set; }
    [Parameter] public bool IsDisabled { get; set; }
    [Parameter] public EventCallback<EditContext> OnSubmitButtonClick { get; set; }
    
    private bool HasError => !string.IsNullOrEmpty(ErrorMessage);
    private bool IsFormDisabled => IsSubmitting || IsDisabled;
}